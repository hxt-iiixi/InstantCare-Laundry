// src/pages/church-admin/UserRolesPage.jsx
import React, { useEffect, useState } from "react";
import { api } from "../../lib/api";
import { useNavigate } from "react-router-dom";
import AdminSidebar from "../../components/church-admin/AdminSidebar";
import AdminHeader from "../../components/church-admin/AdminHeader";
import dayjs from "dayjs";

const UserRolesPage = () => {
  const navigate = useNavigate();
  const [churchAppId, setChurchAppId] = useState(null);
  const [members, setMembers] = useState([]);
  const [loadingMembers, setLoadingMembers] = useState(true);

  const ensureChurchId = async () => {
    if (churchAppId) return churchAppId;
    const token = localStorage.getItem("token");
    const { data } = await api.get("/api/church-admin/me/church", {
      headers: token ? { Authorization: `Bearer ${token}` } : {},
    });
    const id = data?.church?.id || null;
    setChurchAppId(id);
    return id;
  };

  const loadMembers = async () => {
    try {
      setLoadingMembers(true);
      const id = await ensureChurchId();
      if (!id) {
        setMembers([]);
        return;
      }
      const token = localStorage.getItem("token");
      const { data } = await api.get("/api/church-admin/members", {
        params: { churchId: id },
        headers: token ? { Authorization: `Bearer ${token}` } : {},
      });
      setMembers(data?.users || []);
    } finally {
      setLoadingMembers(false);
    }
  };

  useEffect(() => {
    loadMembers();
  }, []);

  const churchName = localStorage.getItem("churchName") || "Your Church";

  // --- PRINT ---
  const escapeHtml = (s = "") =>
    String(s)
      .replaceAll("&", "&amp;")
      .replaceAll("<", "&lt;")
      .replaceAll(">", "&gt;");

 const handlePrint = () => {
  const nowStr = dayjs().format("MMMM D, YYYY h:mm A");

  const rows = members.map((m, i) => {
    const name = (m.name || m.username || m.email || "—")
      .replaceAll("&","&amp;").replaceAll("<","&lt;").replaceAll(">","&gt;");
    const email = (m.email || "—")
      .replaceAll("&","&amp;").replaceAll("<","&lt;").replaceAll(">","&gt;");
    return `<tr><td>${i + 1}</td><td>${name}</td><td>${email}</td></tr>`;
  }).join("");

  const html = `<!doctype html>
<html>
<head>
<meta charset="utf-8" />
<title>${(churchName || "Your Church").replaceAll("<","&lt;")}</title>
<style>
  body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Arial,sans-serif;padding:28px;color:#111827}
  h1{margin:0 0 4px;font-size:22px}.sub{color:#6b7280;margin-bottom:18px}
  table{width:100%;border-collapse:collapse}
  th,td{border:1px solid #e5e7eb;padding:10px 12px;font-size:13px;text-align:left}
  th{background:#f9fafb;font-weight:600}
  tfoot td{border:none;padding-top:14px;color:#6b7280;font-size:12px}
  @page{margin:14mm}
</style>
</head>
<body>
  <h1>${(churchName || "Your Church").replaceAll("<","&lt;")} — Parishioners</h1>
  <div class="sub">Printed ${nowStr} • Total: ${members.length}</div>
  <table>
    <thead><tr><th style="width:60px">#</th><th>Name</th><th>Email</th></tr></thead>
    <tbody>${rows || `<tr><td colspan="3">No members yet.</td></tr>`}</tbody>
    <tfoot><tr><td colspan="4">Generated by Ampower Admin</td></tr></tfoot>
  </table>
</body>
</html>`;

  // Primary: Blob URL in a new tab, then print on load
  const blob = new Blob([html], { type: "text/html" });
  const url = URL.createObjectURL(blob);
  const win = window.open(url, "_blank"); // NOTE: no 'noopener,noreferrer'

  if (win) {
    // Auto print when the new document finishes loading
    const revoke = () => setTimeout(() => URL.revokeObjectURL(url), 1500);
    win.addEventListener("load", () => { try { win.focus(); win.print(); } catch {} revoke(); });
  } else {
    // Fallback: hidden iframe + srcdoc
    const ifr = document.createElement("iframe");
    Object.assign(ifr.style, { position:"fixed", right:"0", bottom:"0", width:"0", height:"0", border:"0" });
    ifr.srcdoc = html;
    ifr.onload = () => {
      try { ifr.contentWindow.focus(); ifr.contentWindow.print(); } catch {}
      setTimeout(() => document.body.removeChild(ifr), 1500);
    };
    document.body.appendChild(ifr);
  }
};


  // --- UI ---
  return (
    <div className="min-h-screen bg-[#FBF7F3]">
      <AdminSidebar />
      <AdminHeader className="pl-[232px]" />
      <div className="pl-[232px] pt-[64px]">
        <div className="max-w-7xl mx-auto w-full px-6 py-6">
          {/* Header + Print */}
          <div className="flex items-center justify-between mb-6">
            <h2 className="text-2xl font-semibold text-gray-800">
              {churchName} <span className="font-[cursive] text-black">Parishioners/Members</span>
            </h2>
            <button
              onClick={handlePrint}
              disabled={loadingMembers}
              className={`inline-flex items-center gap-2 rounded-md px-4 py-2 text-sm font-medium
                ${loadingMembers ? "bg-slate-300 text-white cursor-not-allowed" : "bg-orange-500 hover:bg-orange-600 text-white"}
              `}
              title="Print member list"
            >
              {/* Printer icon */}
              <svg width="16" height="16" viewBox="0 0 24 24" className="opacity-90">
                <path fill="currentColor" d="M6 9V3h12v6H6Zm2-2h8V5H8v2Zm-4 6v6h4v-3h8v3h4v-6H4Zm14-2a2 2 0 1 1 0 4a2 2 0 0 1 0-4Z"/>
              </svg>
              Print Members
            </button>
          </div>

          {/* Members grid */}
          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
            {loadingMembers && (
              <div className="col-span-full text-sm text-gray-500">Loading members…</div>
            )}
            {!loadingMembers && members.length === 0 && (
              <div className="col-span-full text-sm text-gray-500">
                No members have joined with this church code yet.
              </div>
            )}
            {!loadingMembers &&
              members.map((m) => (
                <div
                  key={m._id}
                  className="flex items-center space-x-3 bg-white rounded-md border border-gray-200 shadow-sm p-3"
                >
                  <img
                    src={m.avatar || "/src/assets/images/user-avatar.png"}
                    alt={m.name || m.username || "Member"}
                    className="w-10 h-10 rounded-full object-cover bg-gray-200"
                  />
                  <div className="min-w-0">
                    <p className="font-medium text-gray-900 truncate">
                      {m.name || m.username || m.email}
                    </p>
                    <span className="text-sm text-gray-600 bg-gray-100 rounded-full px-3 py-1">
                      Parishioner
                    </span>
                  </div>
                </div>
              ))}
          </div>
        </div>
      </div>
    </div>
  );
};

export default UserRolesPage;
